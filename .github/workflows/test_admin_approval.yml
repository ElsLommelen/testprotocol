name: PR Review Checks

on:
  pull_request_review:
    types: [submitted]

jobs:
  check-approval:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'approved'
    outputs:
      is-admin: ${{ steps.check-admin.outputs.is_admin }}
      reviewer: ${{ github.event.review.user.login }}
    steps:
      - name: Print review information
        run: |
          echo "PR #${{ github.event.pull_request.number }} reviewed by ${{ github.event.review.user.login }}"
          echo "Review state: ${{ github.event.review.state }}"

      - name: Check admin approval AND additional reviews
        id: check-admin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REVIEWER: ${{ github.event.review.user.login }}
        run: |
          # Check reviewer's permission level
          echo "Checking permissions for reviewer: $REVIEWER"
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                     "https://api.github.com/repos/$REPO/collaborators/$REVIEWER/permission")
          
          PERMISSION=$(echo "$RESPONSE" | jq -r '.permission')
          echo "Permission level: $PERMISSION"
          
          # Check if reviewer has sufficient permissions
          HAS_PERMISSION=false
          if [ "$PERMISSION" == "admin" ] || [ "$PERMISSION" == "maintain" ] || [ "$PERMISSION" == "owner" ]; then
            echo "✅ User has sufficient rights (${PERMISSION})"
            HAS_PERMISSION=true
          else
            echo "❌ User does not have required permissions"
          fi
          
          # Check for additional approvals
          echo "Checking for other approvals..."
          REVIEWS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                   "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER/reviews")
          
          # Count approved reviews (distinct reviewers)
          APPROVED_COUNT=$(echo "$REVIEWS" | jq '[.[] | select(.state == "APPROVED")] | group_by(.user.login) | length')
          echo "Number of users who approved: $APPROVED_COUNT"
          
          # Check if there's more than one approval
          HAS_MULTIPLE_APPROVALS=false
          if [ "$APPROVED_COUNT" -gt 1 ]; then
            echo "✅ Multiple approvals detected ($APPROVED_COUNT)"
            HAS_MULTIPLE_APPROVALS=true
          else
            echo "❌ Only one approval detected"
          fi
          
          # Both conditions must be met
          if [ "$HAS_PERMISSION" = true ] && [ "$HAS_MULTIPLE_APPROVALS" = true ]; then
            echo "✅ Both conditions met - admin approval AND multiple reviews"
            echo "is_admin=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Not all conditions met"
            echo "is_admin=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Verification step
        if: steps.check-admin.outputs.is_admin == 'true'
        run: |
          echo "✅ Verification successful - both conditions met:"
          echo "   - Approved by user with sufficient permissions"
          echo "   - Multiple approvals received"
